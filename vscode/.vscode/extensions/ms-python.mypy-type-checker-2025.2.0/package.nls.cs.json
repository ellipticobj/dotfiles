{"command.restartServer":"Restartovat server","extension.description":"Podpora kontroly typů pro soubory Pythonu pomocí Mypy.","settings.args.description":"Argumenty předané souboru Mypy za účelem povolení kontroly typů v souborech Pythonu. Každý argument by měl být v poli zadán jako samostatný řetězec. \n Příklad: \n `\"mypy-type-checker.args\" = [\"--config-file=<file>\"]`","settings.cwd.description":"Nastaví aktuální pracovní adresář, který se používá k lintování souborů Pythonu pomocí Mypy. Standardně používá kořenový adresář pracovního prostoru ${workspaceFolder}. Můžete ho nastavit na ${fileDirname}, aby se jako pracovní adresář pro Mypy použila nadřazená složka souboru, který se lintuje. Můžete ho také nastavit na ${nearestConfig}, aby se použila nejbližší nadřazená složka nebo složka nadřazeného prvku, která obsahuje soubor pyproject.toml nebo mypy.ini.","settings.daemonStatusFile.description":"Cesta k souboru stavu používaného procesem démon Mypy (dmypy)","settings.ignorePatterns.description":"Nakonfigurujte [vzory glob](https://docs.python.org/3/library/fnmatch.html), jak je podporuje knihovna fnmatch Pythonu, abyste vyloučili soubory nebo složky z lintování pomocí Mypy.","settings.importStrategy.description":"Definuje, který binární soubor Mypy se má použít pro kontrolu souborů Pythonu. Pokud je nastaveno na useBundled, rozšíření použije binární soubor Mypy, který je dodáván s rozšířením. Pokud je nastaveno na fromEnvironment, rozšíření se pokusí použít binární soubor Mypy a všechny závislosti, které jsou k dispozici v aktuálně vybraném prostředí. <br> Poznámka: Pokud rozšíření nemůže ve vybraném prostředí najít platný binární soubor Mypy, použije místo něj binární soubor Mypy dodávaný s rozšířením. Nastavení mypy-type-checker.path má přednost a přepíše chování mypy-type-checker.importStrategy.","settings.importStrategy.fromEnvironment.description":"Umožňuje použít Mypy z vybraného prostředí. Pokud rozšíření nenajde platný binární soubor Mypy, použije místo toho zkompletovanou verzi Mypy dodávanou s rozšířením.","settings.importStrategy.useBundled.description":"Vždy používat zkompletovanou verzi Mypy dodanou s rozšířením.","settings.interpreter.description":"Cesta ke spustitelnému souboru Pythonu nebo k příkazu, který se použije ke spuštění serveru Mypy a jakéhokoli podprocesu. Přijímá pole jednoho nebo více řetězců. Když se nastaví na [], rozšíření použije cestu k vybranému interpretu Pythonu. Při předání příkazu by měl být každý argument zadán jako samostatný řetězec v poli.","settings.path.description":"Cesta nebo příkaz, které má rozšíření použít ke kontrole typů souborů Pythonu pomocí Mypy. Přijímá pole jednoho nebo více řetězců. Při předání příkazu by měl být každý argument zadán jako samostatný řetězec v poli. Pokud je nastaveno na [\"mypy\"], použije se verze Mypy dostupná v proměnné prostředí PATH. <br> Poznámka: Použití této možnosti může zpomalit kontrolu typu. \n Příklady: \n- `[\"~/global_env/mypy\"]` \n- `[\"conda\", \"run\", \"-n\", \"lint_env\", \"python\", \"-m\", \"mypy\"]`","settings.preferDaemon.description":"Určuje, jestli má proces démon Mypy (dmypy) přednost před nastavením mypy pro kontrolu typů. <br> Poznámka: Pokud je vlastnost mypy-type-checker.reportingScope nastavená na hodnotu workspace, povolení procesu démon Mypy nabídne rychlejší kontrolu typů. Toto nastavení se přepíše, pokud je nastavená vlastnost mypy-type-checker.path.","settings.reportingScope.description":"Řídí rozsah hlášení problémů Mypy. Pokud je nastaveno na hodnotu file, Mypy omezí hlášení problémů na soubory, které jsou aktuálně otevřené v editoru. Pokud je nastaveno na hodnotu workspace, Mypy rozšíří hlášení problémů tak, aby zahrnovalo všechny soubory v pracovním prostoru.             ","settings.reportingScope.file.description":"Problémy jsou hlášeny jenom pro soubory otevřené v editoru.","settings.reportingScope.workspace.description":"Problémy jsou hlášeny pro všechny soubory v pracovním prostoru.","settings.severity.description":"Mapování typů zpráv Mypy na diagnostické úrovně závažnosti VS Code, jak se zobrazují v okně Problémy. Můžete ho také použít k přepsání konkrétních kódů chyb Mypy. <br>Například: `{\"error\": \"Error\", \"note\": \"Information\", \"name-defined\": \"Warning\" }`","settings.showNotifications.always.description":"Zobrazí oznámení o chybách a upozorněních.","settings.showNotifications.description":"Určuje, kdy toto rozšíření zobrazuje oznámení.","settings.showNotifications.off.description":"Nikdy nezobrazí oznámení. Všechny chyby nebo upozornění jsou stále k dispozici v protokolech.","settings.showNotifications.onError.description":"Zobrazí oznámení o chybách.","settings.showNotifications.onWarning.description":"Zobrazí oznámení o chybách a upozorněních."}
