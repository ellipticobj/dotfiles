{"command.restartServer":"Перезапустить сервер","extension.description":"Поддержка анализа кода для файлов Python с использованием Mypy.","settings.args.description":"Аргументы, передаваемые в Mypy, чтобы включить проверку типов в файлах Python. Каждый аргумент должен быть указан как отдельная строка в массиве. \n Пример: \n \"mypy-type-checker.args\" = [\"--config-file=<file>\"]","settings.cwd.description":"Задает текущий рабочий каталог, используемый для анализа lint файлов Python с помощью Mypy. По умолчанию используется корневой каталог рабочей области \"${workspaceFolder}\". Можно задать значение \"${fileDirname}\", чтобы использовать родительскую папку файла, который находится в качестве рабочего каталога для Mypy. Вы также можете установить значение `${nearestConfig}`, чтобы использовать ближайшую родительскую или предковую папку, содержащую файл `pyproject.toml` или `mypy.ini`.","settings.daemonStatusFile.description":"Путь к файлу состояния, которые используется демоном Mypy (dmypy).","settings.ignorePatterns.description":"Настройте [стандартную маску](https://docs.python.org/3/library/fnmatch.html), поддерживаемую библиотекой Python fnmatch, чтобы исключить файлы или папки из анализа кода посредством Mypy.","settings.importStrategy.description":"Определяет, какой двоичный файл Mypy будет использоваться для операции проверки типов в файлах Python. Если для этого параметра задано значение \"useBundled\" (использовать пакетный), расширение будет использовать двоичный файл Mypy, поставляемый вместе с расширением. Если задан параметр \"fromEnvironment\" (из среды), расширение попытается использовать двоичный файл Mypy и все зависимости, доступные в текущей среде. <br> Примечание. Если расширение не может найти допустимый двоичный файл Mypy в выбранной среде, оно будет использовать двоичный файл Mypy, поставляемый вместе с расширением. Параметр \"mypy-type-checker.path\" имеет приоритет и переопределяет поведение \"mypy-type-checker.importStrategy\".","settings.importStrategy.fromEnvironment.description":"Используйте Mypy из выбранной среды. Если расширению не удается найти допустимый двоичный файл Mypy, оно будет использовать пакетную версию Mypy.","settings.importStrategy.useBundled.description":"Всегда использовать пакетную версию Mypy, поставляемую с расширением.","settings.interpreter.description":"Путь к исполняемому файлу Python или команде, которая будет использоваться для запуска сервера Mypy и всех подпроцессов. Принимает массив из одной или нескольких строк. Если задано значение \"[]\", расширение будет использовать путь к выбранному интерпретатору Python. При передаче команды каждый аргумент должен быть указан как отдельная строка в массиве.","settings.path.description":"Путь или команда, используемые расширением для проверки типов в файлах Python с помощью Mypy. Принимает массив из одной или нескольких строк. При передаче команды каждый аргумент должен быть указан в виде отдельной строки в массиве. Если задан параметр [\"mypy\"], будет использоваться версия Mypy, доступная в переменной среды PATH. <br> Примечание. Использование этого параметра может привести к замедлению проверки типов. \n Примеры: \n- [\"~/global_env/mypy\"] \n- [\"conda\", \"run\", \"-n\", \"lint_env\", \"python\", \"-m\", \"mypy\"]","settings.preferDaemon.description":"Имеет ли управляющая программа Mypy (\"dmypy\") приоритет перед \"mypy\" для проверки типов. <br> Примечание. Если для \"mypy-type-checker.reportingScope\" установлено значение \"workspace\" (рабочее пространство), включение управляющей программы Mypy позволит быстрее проверять типы. Этот параметр будет игнорироваться, если задано значение параметра \"mypy-type-checker.path\".","settings.reportingScope.description":"Управляет областью сообщений о проблемах Mypy. Если задано значение \"file\", Mypy будет сообщать о проблемах только для файлов, открытых в редакторе. Если задано значение \"workspace\", Mypy будет сообщать о проблемах для всех файлов в рабочей области.             ","settings.reportingScope.file.description":"Можно сообщить только о проблемах с файлами, открытыми в редакторе.","settings.reportingScope.workspace.description":"Сообщения о проблемах выдаются для всех файлов в рабочей области.","settings.severity.description":"Сопоставление типов сообщений Mypy с уровнями серьезности диагностики VS Code для показа в окне \"Проблемы\". Может также использоваться для переопределения определенных кодов ошибок Mypy. <br>Пример: \"{\"error\": \"Error\", \"note\": \"Information\", \"name-defined\": \"Warning\" }\"","settings.showNotifications.always.description":"Показ уведомлений об ошибках и предупреждениях.","settings.showNotifications.description":"Определяет, когда уведомления отображаются этим расширением.","settings.showNotifications.off.description":"Никогда не показывать уведомлений. Все ошибки и предупреждения по-прежнему доступны в журналах.","settings.showNotifications.onError.description":"Показывать уведомления в случае ошибок.","settings.showNotifications.onWarning.description":"Показ уведомлений об ошибках и предупреждениях."}
