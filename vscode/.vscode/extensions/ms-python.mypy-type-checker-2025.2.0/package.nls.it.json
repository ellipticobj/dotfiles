{"command.restartServer":"Riavvia server","extension.description":"Supporto del controllo del tipo per i file Python con Mypy.","settings.args.description":"Argomenti passati a Mypy per abilitare il controllo dei tipi nei file Python. Ogni argomento deve essere fornito come stringa separata nella matrice. \n Esempio: \n '\"mypy-type-checker.args\" = [\"--config-file=<file>\"]'","settings.cwd.description":"Imposta la directory di lavoro corrente usata per il lint dei file Python con Mypy. Per impostazione predefinita, usa la directory radice dell’area di lavoro `${workspaceFolder}`. È possibile impostare su `${fileDirname}` per usare la cartella padre del file per cui viene effettuato il lint come directory di lavoro per Mypy. È anche possibile impostarlo su '${nearestConfig}' per usare la cartella padre/predecessore più vicina che contiene un file 'pyproject.toml' o 'mypy.ini'.","settings.daemonStatusFile.description":"Percorso del file di stato usato dal daemon Mypy ('dmypy').","settings.ignorePatterns.description":"Configurare [glob patterns](https://docs.python.org/3/library/fnmatch.html) come supportato dalla libreria Python fnmatch per escludere i file o le cartelle dall'unione con Mypy.","settings.importStrategy.description":"Definisce il file binario Mypy da usare per la verifica del tipo dei file Python. Quando impostata su `useBundled`, l'estensione userà il file binario di Mypy fornito con l'estensione. Se impostata su `fromEnvironment`, l'estensione tenterà di usare il file binario di Mypy e tutte le dipendenze disponibili nell'ambiente attualmente selezionato. <br> Nota: se l'estensione non riesce a trovare un file binario Mypy valido nell'ambiente selezionato, verrà eseguito il fallback all’uso del file binario Mypy fornito con l'estensione. L'impostazione `mypy-type-checker.path` ha la precedenza ed esegue l'override del comportamento di `mypy-type-checker.importStrategy`.","settings.importStrategy.fromEnvironment.description":"Usare Mypy dall'ambiente selezionato. Se l'estensione non riesce a trovare un file binario di Mypy valido, verrà eseguito il fallback all'uso della versione in bundle di Mypy.","settings.importStrategy.useBundled.description":"Usare sempre la versione di Mypy fornita con l'estensione.","settings.interpreter.description":"Percorso di un eseguibile Python o di un comando che verrà usato per avviare il server Mypy e qualsiasi sottoprocesso. Accetta una matrice di una o più stringhe. Se impostata su '[]', l'estensione userà il percorso dell'interprete Python selezionato. Se si passa un comando, ogni argomento deve essere fornito come stringa separata nella matrice.","settings.path.description":"Percorso o comando da usare dall'estensione per il controllo del tipo di file Python con Mypy. Accetta una matrice di una o più stringhe. Se si passa un comando, ogni argomento deve essere fornito come stringa separata nella matrice. Se impostato su '[\"mypy\"]', userà la versione di Mypy disponibile nella variabile di ambiente 'PATH'. <br> Nota: l'uso di questa opzione può rallentare il controllo del tipo. \n Esempi: \n- '[\"~/global_env/mypy\"]' \n- '[\"conda\", \"run\", \"-n\", \"lint_env\", \"python\", \"-m\", \"mypy\"]'","settings.preferDaemon.description":"Indica se il daemon Mypy (`dmypy`) avrà la precedenza su `mypy` per il controllo del tipo. <br> Nota: se `mypy-type-checker.reportingScope` è impostato su `workspace`, l'abilitazione del daemon Mypy offrirà un'esperienza di controllo del tipo più veloce. Per questa impostazione verrà effettuato l’override se `mypy-type-checker.path` è impostato.","settings.reportingScope.description":"Controlla l'ambito della segnalazione dei problemi di Mypy. Se impostato su `file`, Mypy limiterà la segnalazione dei problemi ai file attualmente aperti nell'editor. Se impostato su `area di lavoro`, Mypy estenderà la segnalazione dei problemi a tutti i file presenti nell'area di lavoro.             ","settings.reportingScope.file.description":"I problemi vengono segnalati solo per i file aperti nell'editor.","settings.reportingScope.workspace.description":"Vengono segnalati problemi per tutti i file all'interno dell'area di lavoro.","settings.severity.description":"Mapping dei tipi di messaggio di Mypy con i livelli di gravità diagnostica di VS Code, come visualizzato nella finestra Problemi. È anche possibile usarlo per eseguire l'override di codici di errore Mypy specifici. <br>Ad esempio: '{\"error\": \"Error\", \"note\": \"Information\", \"name-defined\": \"Warning\" }'","settings.showNotifications.always.description":"Mostra le notifiche per errori e avvisi.","settings.showNotifications.description":"Controlla quando mostrare le notifiche da questa estensione.","settings.showNotifications.off.description":"Non visualizzare mai una notifica. Eventuali errori o avvisi sono ancora disponibili nei log.","settings.showNotifications.onError.description":"Mostra le notifiche per gli errori.","settings.showNotifications.onWarning.description":"Mostra le notifiche per errori e avvisi."}
