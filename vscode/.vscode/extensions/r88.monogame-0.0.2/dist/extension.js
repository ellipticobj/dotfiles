"use strict";var g=Object.create;var a=Object.defineProperty;var f=Object.getOwnPropertyDescriptor;var v=Object.getOwnPropertyNames;var u=Object.getPrototypeOf,h=Object.prototype.hasOwnProperty;var C=(e,o)=>{for(var n in o)a(e,n,{get:o[n],enumerable:!0})},d=(e,o,n,i)=>{if(o&&typeof o=="object"||typeof o=="function")for(let s of v(o))!h.call(e,s)&&s!==n&&a(e,s,{get:()=>o[s],enumerable:!(i=f(o,s))||i.enumerable});return e};var m=(e,o,n)=>(n=e!=null?g(u(e)):{},d(o||!e||!e.__esModule?a(n,"default",{value:e,enumerable:!0}):n,e)),k=e=>d(a({},"__esModule",{value:!0}),e);var A={};C(A,{activate:()=>x,deactivate:()=>T});module.exports=k(A);var t=m(require("vscode")),r=m(require("child_process")),l=require("path"),c;function x(e){$(),b(),e.subscriptions.push(t.commands.registerCommand("monogame.createProject",()=>{P()}),t.commands.registerCommand("monogame.openMGCB",()=>{M()}),t.commands.registerCommand("monogame.install",()=>{p()}))}function $(){let e="dotnet new --list | ";switch(process.platform){case"win32":e+="findstr mgdesktopgl";break;case"darwin":case"linux":e+="grep mgdesktopgl";break;default:t.window.showErrorMessage("Automatic template installation is not supported.");return}r.exec(e,(o,n,i)=>{n||p()})}function p(){w("dotnet new install MonoGame.Templates.CSharp"),t.window.showInformationMessage("Installing Templates...")}function b(){t.workspace.findFiles("**/Content/*.mgcb").then(e=>{e.length>0?t.commands.executeCommand("setContext","monogame.projectOpen",!0):t.commands.executeCommand("setContext","monogame.projectOpen",!1)})}async function P(){let e=new Map([["$(device-desktop) Cross-Platform Desktop Application","mgdesktopgl"],["$(device-desktop) Windows Desktop Application","mgwindowsdx"],["$(device-desktop) Windows Universal XAML Application","mguwpxaml"],["$(device-mobile) Android Application","mgandroid"],["$(device-mobile) iOS Application","mgios"],["$(tools) Content Pipeline Extension","mgpipeline"],["$(archive) Game Library","mglib"],["$(archive) Shared Library Project","mgshared"]]),o=await t.window.showQuickPick(Array.from(e.keys()),{title:"Create MonoGame Project",placeHolder:"Select a Template..."});if(!o)return;let n=await t.window.showInputBox({title:"Create MonoGame Project",placeHolder:"Enter Project Name..."});if(!n)return;let i=await t.window.showOpenDialog({openLabel:"Select Folder",canSelectFiles:!1,canSelectFolders:!0});i&&j(i[0].fsPath,n.replaceAll(" ","_"),e.get(o))}function j(e,o,n){let i=[`cd ${e}`,`mkdir ${o}`,`cd ${o}`,`dotnet new ${n} -n ${o}`,`dotnet new sln -n ${o}`,`dotnet sln add ./${o}/${o}.csproj`,"code . -r"];for(let s of i)w(s);t.window.showInformationMessage("Creating new project...")}function M(){t.workspace.findFiles("**/Content/*.mgcb").then(e=>{try{let o=e[0].fsPath;r.execFile("dotnet",["mgcb-editor",o],{cwd:(0,l.dirname)(o)})}catch{t.window.showErrorMessage("Could not find .mgcb file in current directory.")}})}function w(e){c||(t.window.activeTerminal&&t.window.activeTerminal.name==="powershell"?c=t.window.activeTerminal:c=t.window.createTerminal()),c.sendText(e)}function T(){c.dispose()}0&&(module.exports={activate,deactivate});
